<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Make a poll</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
</head>
<body>
  <div class="container">
    <h1 class="mt-4">Create a poll and get results!</h1>
    <small class="text text-muted">
      There can only be four option for the poll.
    </small>
  

    <form action="/" method="POST">
      <div class="form-group">
        <br>
        <br>
        <input type="text" name="first" class="form-control" placeholder="first option">
        <br>
        <input type="text" name="second" class="form-control" placeholder="second option">
        <br>
        <input type="text" name="third" class="form-control" placeholder="third option">
        <br>
        <input type="text" name="fourth" class="form-control" placeholder="fourth option">
        <br>
        <button type="submit" class="btn btn-info">Make a poll!</button>
      </div>
    </form>
  </div>

  <div id="chat-container">
    <div id="message-list">
        <!-- list will contain messages -->
    </div>
    <input type="text" id="message-input">
    <button id="send-message">Send</button>
</div>

<script src="http://localhost:3000/socket.io/socket.io.js"></script>

<script>
    // socket code in js.

    const socket = io.connect('http://localhost:9000/view');
    const username = prompt('Enter your name');
    // emit the username to the server
    socket.emit("join", username);

    // get the elements
    const messageInput = document.getElementById("message-input");
    const messageList = document.getElementById("message-list");
    const sendButton = document.getElementById("send-message");

    sendButton.addEventListener('click', function () {
        // read the message from input and send to server.
        const message = messageInput.value;
        if (message) {
            socket.emit('new_message', message); // Emitting the message to the server

            // add message to the list 
            const messageElement = document.createElement("div");
            messageElement.innerText = username + ": " + message;
            messageList.appendChild(messageElement);

            //  Reset the value of textbox to empty
            messageInput.value = '';
        }
    });

    // Display messages on the UI.

    socket.on('load_messages', (messages)=>{
        messages.forEach(message => {
            const messageElement = document.createElement("div");
            messageElement.innerText = new Date(message.timestamp).toDateString() + "-" + message.username + ":" + message.message;
            messageList.appendChild(messageElement);
                
        });
    })

    // Listen for broadcast message, and add it to the list.
    socket.on('broadcast_message', (userMessage) => {
        const messageElement = document.createElement("div");
        messageElement.innerText = userMessage.username + ":" + userMessage.message;
        messageList.appendChild(messageElement);
    })

</script>
</body>
</html>